// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using R3M.Financas.Api.Repository.Context;

#nullable disable

namespace R3M.Financas.Api.Migrations
{
    [DbContext(typeof(FinancasContext))]
    partial class FinancasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("R3M.Financas.Api.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_id");

                    b.Property<DateTime?>("UpdatenDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updaten_date");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_categories_name");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_categories_parent_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("R3M.Financas.Api.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("numeric")
                        .HasColumnName("initial_balance");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatenDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updaten_date");

                    b.HasKey("Id")
                        .HasName("pk_institutions");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_institutions_name");

                    b.ToTable("institutions", (string)null);
                });

            modelBuilder.Entity("R3M.Financas.Api.Domain.Movimentation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid")
                        .HasColumnName("institution_id");

                    b.Property<Guid>("PeriodId")
                        .HasColumnType("uuid")
                        .HasColumnName("period_id");

                    b.Property<DateTime?>("UpdatenDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updaten_date");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_movimentations");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_movimentations_category_id");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_movimentations_institution_id");

                    b.HasIndex("PeriodId")
                        .HasDatabaseName("ix_movimentations_period_id");

                    b.ToTable("movimentations", (string)null);
                });

            modelBuilder.Entity("R3M.Financas.Api.Domain.Period", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character(5)")
                        .HasColumnName("description")
                        .IsFixedLength();

                    b.Property<DateOnly>("End")
                        .HasColumnType("date")
                        .HasColumnName("end");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<DateOnly>("Start")
                        .HasColumnType("date")
                        .HasColumnName("start");

                    b.Property<DateTime?>("UpdatenDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updaten_date");

                    b.HasKey("Id")
                        .HasName("pk_periods");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasDatabaseName("ix_periods_description");

                    b.ToTable("periods", (string)null);
                });

            modelBuilder.Entity("R3M.Financas.Api.Domain.Category", b =>
                {
                    b.HasOne("R3M.Financas.Api.Domain.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_categories_categories_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("R3M.Financas.Api.Domain.Movimentation", b =>
                {
                    b.HasOne("R3M.Financas.Api.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_movimentations_categories_category_id");

                    b.HasOne("R3M.Financas.Api.Domain.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_movimentations_institutions_institution_id");

                    b.HasOne("R3M.Financas.Api.Domain.Period", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_movimentations_periods_period_id");

                    b.Navigation("Category");

                    b.Navigation("Institution");

                    b.Navigation("Period");
                });
#pragma warning restore 612, 618
        }
    }
}
